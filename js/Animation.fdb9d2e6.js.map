{"version":3,"sources":["webpack:///./src/views/Animation.vue","webpack:///./src/views/Animation.vue?c695","webpack:///./src/views/Animation.vue?cb27"],"names":["id","name","data","style","computed","map","store","getters","createMap","this","mounted","pageReload","mapboxgl","state","updateCameraPosition","position","altitude","target","camera","getFreeCameraOptions","MercatorCoordinate","fromLngLat","lookAtPoint","setFreeCameraOptions","on","addSource","setTerrain","addLayer","animationIndex","animationTime","lerp","a","b","t","Array","isArray","result","i","Math","min","length","animations","duration","animate","phase","start","end","alt","target1","target2","lastTime","frame","time","current","window","requestAnimationFrame","Popup","closeOnClick","anchor","setLngLat","setHTML","addTo","render"],"mappings":"uIACOA,GAAG,O,gDAAR,eAAoB,MAApB,G,0BAMa,GACbC,KAAM,YACNC,KAAM,WACJ,MAAO,CACLC,MAAO,wCAGXC,SAAU,CACRC,IADQ,WAEN,OAAOC,EAAA,KAAMC,QAAQC,UAAU,OAAQ,KAAM,GAAI,MAC7C,EAAE,mBAAoB,mBAAoBC,KAAKN,MAAO,GAAG,KAIjEO,QAda,WAeXJ,EAAA,KAAMC,QAAQI,aACd,IAAIN,EAAMI,KAAKJ,IACXO,EAAWN,EAAA,KAAMO,MAAMD,SAsB3B,SAASE,EAAqBC,EAAUC,EAAUC,GAChD,IAAIC,EAASb,EAAIc,uBAEjBD,EAAOH,SAAWH,EAASQ,mBAAmBC,WAC1CN,EACAC,GAGJE,EAAOI,YAAYL,GACnBZ,EAAIkB,qBAAqBL,GA7B3Bb,EAAImB,GAAG,QAAQ,WACbnB,EAAIoB,UAAU,aAAc,CAC1B,KAAQ,aACR,IAAO,wCACP,SAAY,IACZ,QAAW,KAEbpB,EAAIqB,WAAW,CAAC,OAAU,aAAc,aAAgB,MAExDrB,EAAIsB,SAAS,CACX,GAAM,MACN,KAAQ,MACR,MAAS,CACP,WAAY,aACZ,qBAAsB,CAAC,EAAK,IAC5B,+BAAgC,SAiBtC,IAAIC,EAAiB,EACjBC,EAAgB,EAGpBxB,EAAImB,GAAG,QAAQ,WAEb,IAAIM,EAAO,SAAUC,EAAGC,EAAGC,GACzB,GAAIC,MAAMC,QAAQJ,IAAMG,MAAMC,QAAQH,GAAI,CAExC,IADA,IAAII,EAAS,GACJC,EAAI,EAAGA,EAAIC,KAAKC,IAAIR,EAAES,OAAQR,EAAEQ,QAASH,IAChDD,EAAOC,GAAKN,EAAEM,IAAM,EAAMJ,GAAKD,EAAEK,GAAKJ,EACxC,OAAOG,EAEP,OAAOL,GAAK,EAAME,GAAKD,EAAIC,GAI3BQ,EAAa,CACf,CACEC,SAAU,GACVC,QAAS,SAAUC,GACjB,IAAIC,EAAQ,EAAE,kBAAmB,oBAC7BC,EAAM,EAAE,mBAAoB,mBAE5BC,EAAM,CAAC,KAAS,MAGhBhC,EAAWe,EAAKe,EAAOC,EAAKF,GAC5B5B,EAAWc,EAAKiB,EAAI,GAAIA,EAAI,GAAIH,GAChC3B,EAAS,EAAE,mBAAoB,oBAEnCH,EAAqBC,EAAUC,EAAUC,KAG7C,CACEyB,SAAU,GACVC,QAAS,SAAUC,GACjB,IAAIC,EAAQ,EAAE,mBAAoB,mBAC9BC,EAAM,EAAE,mBAAoB,mBAE5BC,EAAM,CAAC,KAAQ,MACfC,EAAU,EAAE,mBAAoB,oBAChCC,EAAU,EAAE,mBAAoB,mBAGhClC,EAAWe,EAAKe,EAAOC,EAAKF,GAC5B5B,EAAWc,EAAKiB,EAAI,GAAIA,EAAI,GAAIH,GAChC3B,EAASa,EAAKkB,EAASC,EAASL,GAEpC9B,EAAqBC,EAAUC,EAAUC,MAK3CiC,EAAW,EAEf,SAASC,EAAMC,GACbxB,GAAkBa,EAAWD,OAC7B,IAAIa,EAAUZ,EAAWb,GAErBC,EAAgBwB,EAAQX,UAC1BW,EAAQV,QAAQd,EAAgBwB,EAAQX,UAI1Cb,GAAiB,GAAKuB,EAAOF,GAC7BA,EAAWE,EAEPvB,EAAgBwB,EAAQX,WAC1Bd,IACAC,EAAgB,GAGlByB,OAAOC,sBAAsBJ,GAG/BG,OAAOC,sBAAsBJ,MAI/B,IAAIvC,EAAS4C,MAAM,CAACC,cAAc,EAAOC,OAAQ,WAC5CC,UAAU,EAAE,mBAAoB,oBAChCC,QAAQ,gKAERC,MAAMxD,K,UCzIf,EAAOyD,OAASA,EAED,gB,oCCPf,W","file":"js/Animation.fdb9d2e6.js","sourcesContent":["<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nimport store from \"@/store/store\";\n\nexport default {\n  name: \"Animation\",\n  data: function () {\n    return {\n      style: 'mapbox://styles/mapbox/satellite-v9',\n    }\n  },\n  computed: {\n    map() {\n      return store.getters.createMap(\"map\", -10.2, 20, 11.53,\n          [-122.15860580189565, 42.91772239477004], this.style, 5, false\n      );\n    }\n  },\n  mounted() {\n    store.getters.pageReload();\n    let map = this.map;\n    let mapboxgl = store.state.mapboxgl;\n    // add terrain and sky layers once the style has loaded\n    map.on('load', function () {\n      map.addSource('mapbox-dem', {\n        'type': 'raster-dem',\n        'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n        'tileSize': 512,\n        'maxzoom': 14\n      });\n      map.setTerrain({'source': 'mapbox-dem', 'exaggeration': 1.5});\n\n      map.addLayer({\n        'id': 'sky',\n        'type': 'sky',\n        'paint': {\n          'sky-type': 'atmosphere',\n          'sky-atmosphere-sun': [0.0, 90.0],\n          'sky-atmosphere-sun-intensity': 15\n        }\n      });\n    });\n\n    function updateCameraPosition(position, altitude, target) {\n      let camera = map.getFreeCameraOptions();\n\n      camera.position = mapboxgl.MercatorCoordinate.fromLngLat(\n          position,\n          altitude\n      );\n\n      camera.lookAtPoint(target);\n      map.setFreeCameraOptions(camera);\n    }\n\n    let animationIndex = 0;\n    let animationTime = 0.0;\n\n    // wait for the terrain and sky to load before starting animations\n    map.on('idle', function () {\n      // linearly interpolate between two altitudes/positions based on time\n      let lerp = function (a, b, t) {\n        if (Array.isArray(a) && Array.isArray(b)) {\n          let result = [];\n          for (let i = 0; i < Math.min(a.length, b.length); i++)\n            result[i] = a[i] * (1.0 - t) + b[i] * t;\n          return result;\n        } else {\n          return a * (1.0 - t) + b * t;\n        }\n      };\n\n      let animations = [\n        {\n          duration: 80.0,\n          animate: function (phase) {\n            let start = [-122.1591817072966, 42.889970507106916];\n            let end = [-122.14671429878624, 42.94240583812641];\n\n            let alt = [13000.0, 3500.0];\n\n            // interpolate camera position while keeping focus on a target lat/lng\n            let position = lerp(start, end, phase);\n            let altitude = lerp(alt[0], alt[1], phase);\n            let target = [-122.14597690976275, 42.939151624236146];\n\n            updateCameraPosition(position, altitude, target);\n          }\n        },\n        {\n          duration: 60,\n          animate: function (phase) {\n            let start = [-122.14671429878624, 42.94240583812641];\n            let end = [-122.14187181333054, 42.96081404622487];\n\n            let alt = [3500.0, 16000.0];\n            let target1 = [-122.14597690976275, 42.939151624236146];\n            let target2 = [-122.15051079336699, 42.93831698893578];\n\n            // interpolate both the camera position and target\n            let position = lerp(start, end, phase);\n            let altitude = lerp(alt[0], alt[1], phase);\n            let target = lerp(target1, target2, phase);\n\n            updateCameraPosition(position, altitude, target);\n          }\n        }\n      ];\n\n      let lastTime = 0.0;\n\n      function frame(time) {\n        animationIndex %= animations.length;\n        let current = animations[animationIndex];\n\n        if (animationTime < current.duration) {\n          current.animate(animationTime / current.duration);\n        }\n\n        // allow requestAnimationFrame to control the speed of the animation\n        animationTime += 1 / (time - lastTime);\n        lastTime = time;\n\n        if (animationTime > current.duration) {\n          animationIndex++;\n          animationTime = 0.0;\n        }\n\n        window.requestAnimationFrame(frame);\n      }\n\n      window.requestAnimationFrame(frame);\n    });\n\n    // popup helper with description\n    new mapboxgl.Popup({closeOnClick: false, anchor: \"center\"})\n        .setLngLat([-122.20597690976275, 42.939651624236146])\n        .setHTML('<div id=\"animation-helper\" class=\"popup-helper\">Cinematographic animation with 3D terrain.<br/><br/>' +\n            'Location: Crater Lake, Wizard Island, Oregon, USA.</div>')\n        .addTo(map);\n  }\n}\n\n</script>\n\n\n<style>\n#animation-helper {\n  margin: 0;\n}\n</style>\n","import { render } from \"./Animation.vue?vue&type=template&id=717eb65c\"\nimport script from \"./Animation.vue?vue&type=script&lang=js\"\nexport * from \"./Animation.vue?vue&type=script&lang=js\"\n\nimport \"./Animation.vue?vue&type=style&index=0&id=717eb65c&lang=css\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Animation.vue?vue&type=style&index=0&id=717eb65c&lang=css\""],"sourceRoot":""}