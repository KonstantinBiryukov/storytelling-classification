{"version":3,"sources":["webpack:///./src/views/ObjectPathAlongRoute.vue","webpack:///./src/views/ObjectPathAlongRoute.vue?cddd","webpack:///./src/views/ObjectPathAlongRoute.vue?8e7c"],"names":["id","class","name","data","style","computed","map","store","getters","createMap","this","mounted","pageReload","mapboxgl","state","origin","destination","route","point","lineDistance","features","arc","steps","i","segment","push","geometry","coordinates","counter","on","animate","start","end","properties","bearing","getSource","setData","requestAnimationFrame","addSource","addLayer","document","getElementById","addEventListener","Popup","closeOnClick","anchor","setLngLat","setHTML","addTo","render","__scopeId"],"mappings":"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","file":"js/ObjectPathAlongRoute.8bcc0047.js","sourcesContent":["<template>\n  <div id=\"map\"></div>\n  <div class=\"overlay\">\n    <button id=\"replay\">Replay</button>\n  </div>\n\n</template>\n\n<script>\nimport * as turf from \"@turf/turf\";\nimport store from \"@/store/store\";\n\nexport default {\n  name: \"ObjectPathAlongRoute\",\n  data: function () {\n    return {\n      style: 'mapbox://styles/mapbox/streets-v11',\n    }\n  },\n  computed: {\n    map() {\n      return store.getters.createMap(\"map\", 0, 0, 1.5,\n          [-40.6861245, 59.2268129], this.style, 1, true\n      );\n    }\n  },\n  mounted() {\n    store.getters.pageReload();\n    let map = this.map;\n    let mapboxgl = store.state.mapboxgl;\n\n    // Sheremetyevo, Moscow\n    const origin = [37.4103143, 55.9736512];\n\n    // LAX,LA\n    const destination = [-118.40511299589207, 33.944011419272634];\n\n    // A simple line from origin to destination.\n    let route = {\n      'type': 'FeatureCollection',\n      'features': [\n        {\n          'type': 'Feature',\n          'geometry': {\n            'type': 'LineString',\n            'coordinates': [origin, destination]\n          }\n        }\n      ]\n    };\n\n    // A single point that animates along the route.\n    // Coordinates are initially set to origin.\n    let point = {\n      'type': 'FeatureCollection',\n      'features': [\n        {\n          'type': 'Feature',\n          'properties': {},\n          'geometry': {\n            'type': 'Point',\n            'coordinates': origin\n          }\n        }\n      ]\n    };\n\n    // Calculate the distance in kilometers between route start/end point.\n    let lineDistance = turf.length(route.features[0]);\n\n    let arc = [];\n\n    // Number of steps to use in the arc and animation, more steps means\n    // a smoother arc and animation, but too many steps will result in a\n    // low frame rate\n    let steps = 500;\n\n    // Draw an arc between the `origin` & `destination` of the two points\n    for (let i = 0; i < lineDistance; i += lineDistance / steps) {\n      let segment = turf.along(route.features[0], i);\n      arc.push(segment.geometry.coordinates);\n    }\n\n    // Update the route with calculated arc coordinates\n    route.features[0].geometry.coordinates = arc;\n\n    // Used to increment the value of the point measurement against the route.\n    let counter = 0;\n\n    map.on('load', function () {\n      // Add a source and layer displaying a point which will be animated in a circle.\n      map.addSource('route', {\n        'type': 'geojson',\n        'data': route\n      });\n\n      map.addSource('point', {\n        'type': 'geojson',\n        'data': point\n      });\n\n      map.addSource('airports', {\n        'type': 'geojson',\n        'data': 'https://raw.githubusercontent.com/KonstantinBiryukov/KonstantinBiryukov.github.io/master/storytellingmaps-geojson/LAXMoscow.geojson'\n      });\n\n      map.addLayer({\n        'id': 'route',\n        'source': 'route',\n        'type': 'line',\n        'paint': {\n          'line-width': 2,\n          'line-color': '#007cbf'\n        }\n      });\n\n      map.addLayer({\n        'id': 'point',\n        'source': 'point',\n        'type': 'symbol',\n        'layout': {\n          'icon-image': 'airfield-15',\n          'icon-rotate': ['get', 'bearing'],\n          'icon-rotation-alignment': 'map',\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true\n        }\n      });\n\n      map.addLayer({\n        'id': 'airports',\n        'type': 'symbol',\n        'source': 'airports',\n        'layout': {\n          'icon-image': 'airfield-15',\n          'text-field': [\n            'format',\n            ['upcase', ['get', 'FacilityName']],\n            { 'font-scale': 1.15 },\n            '\\n',\n            {},\n            ['upcase', ['get', 'Comments']],\n            { 'font-scale': 0.75 }\n          ],\n          'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n          'text-offset': [0, 0.8],\n          'text-anchor': 'top'\n        }\n      });\n\n      function animate() {\n        let start =\n            route.features[0].geometry.coordinates[\n                counter >= steps ? counter - 1 : counter\n                ];\n        let end =\n            route.features[0].geometry.coordinates[\n                counter >= steps ? counter : counter + 1\n                ];\n        if (!start || !end) return;\n\n        // Update point geometry to a new position based on counter denoting\n        // the index to access the arc\n        point.features[0].geometry.coordinates =\n            route.features[0].geometry.coordinates[counter];\n\n        // Calculate the bearing to ensure the icon is rotated to match the route arc\n        // The bearing is calculated between the current point and the next point, except\n        // at the end of the arc, which uses the previous point and the current point\n        point.features[0].properties.bearing = turf.bearing(\n            turf.point(start),\n            turf.point(end)\n        );\n\n        // Update the source with this new data\n        map.getSource('point').setData(point);\n\n        // Request the next frame of animation as long as the end has not been reached\n        if (counter < steps) {\n          requestAnimationFrame(animate);\n        }\n\n        counter = counter + 1;\n      }\n\n      document\n          .getElementById('replay')\n          .addEventListener('click', function () {\n            // Set the coordinates of the original point back to origin\n            point.features[0].geometry.coordinates = origin;\n\n            // Update the source layer\n            map.getSource('point').setData(point);\n\n            // Reset the counter\n            counter = 0;\n\n          // Restart the animation\n            animate(counter);\n          });\n\n      // Start the animation\n      animate(counter);\n\n      // popup helper with description\n      new mapboxgl.Popup({closeOnClick: false, anchor: \"center\"})\n          .setLngLat([-159.1437881976649, 66.13508298542861])\n          .setHTML('<div id=\"alongRoute-helper\" class=\"popup-helper\">' +\n               'A point is animated along the route.<br>' +\n               'Push \"Replay\" button to repeat the plane\\'s animation.</div>')\n          .addTo(map);\n    });\n  }\n}\n</script>\n\n<style scoped>\n.overlay {\n  position: absolute;\n  top: 22%;\n  left: 3%;\n}\n\n.overlay button {\n  font: 600 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\n  background-color: orangered;\n  color: #fff;\n  display: inline-block;\n  margin: 0;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  border-radius: 3px;\n}\n\n.overlay button:hover {\n  background-color: red;\n}\n</style>","import { render } from \"./ObjectPathAlongRoute.vue?vue&type=template&id=10458e1c&scoped=true\"\nimport script from \"./ObjectPathAlongRoute.vue?vue&type=script&lang=js\"\nexport * from \"./ObjectPathAlongRoute.vue?vue&type=script&lang=js\"\n\nimport \"./ObjectPathAlongRoute.vue?vue&type=style&index=0&id=10458e1c&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-10458e1c\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ObjectPathAlongRoute.vue?vue&type=style&index=0&id=10458e1c&scoped=true&lang=css\""],"sourceRoot":""}